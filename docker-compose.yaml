version: "3.1"
services:
  database:
    image: mdillon/postgis:10
    ports:
      - "5433:5432"
    expose:
      - "5433"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - back-end

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - back-end

  commuters:
    restart: always
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    image: commuters-image
    volumes:
      - .:/usr/commuters
    depends_on:
      - redis
      - database
      # /commuters/wait-for-it.sh &&
    stdin_open: true
    tty: true
    environment:
      - DATABASE_URL=postgres://postgres:postgres@database:5432/postgres
      - CELERY_BROKER_URL=redis://redis
      - CELERY_RESULT_BACKEND=redis://redis
      - DB_NAME=postgres
      - DB_PASSWORD=postgres
      - DB_USER=postgres
      - DB_HOST=database
    networks:
      - back-end

  proxy:
    build:
      context: .
      dockerfile: nginx/nginx.Dockerfile
    image: nginx-custom
    ports:
      - "80:80"
    networks:
      - back-end
    depends_on:
      - commuters
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./app/static:/static
    restart: always
volumes:
  pgdata:

networks:
  back-end:
